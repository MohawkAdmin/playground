version: 2.1

commands:
  # Exercise - Rollback
  destroy_environment:
      steps:
        - run:
            name: Destroy environment
            # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
            # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
            when: on_fail
            command: |
              aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:

  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
                --region us-east-1

  # Exercise: Config and Deployment
  configure_infrastructure: 
      docker:
        - image: python:3.11-rc-alpine # python:3.7-alpine3.11
      steps:
        - checkout
        - add_ssh_keys:
            # You can get this ID in the section where you registered the SSH Key
            fingerprints: ["3a:e4:b6:ba:db:04:12:45:06:b1:5a:21:96:c6:0d:d0"]
            # fingerprints: ["9e:0c:05:ad:99:ec:ef:8f:aa:ef:6a:70:c9:dc:6f:39"] 
        - run:
            name: Install Ansible
            command: |
              apk add --update ansible
        - run:
            name: Run Playbook and Configure server
            command: |
              ansible-playbook -i inventory.txt main.yml

  # Exercise: Smoke Testing
  smoke_test:
      docker:
        - image: alpine:latest
      steps:
        # - run: apk add --update curl
        - run:
            name: smoke test
            # Fail the job intentionally to simulate an error.
            command:  return 1
        - destroy_environment
            # command: |
            #   URL="https://blog.udacity.com/"  
            #   # Test if website exists
            #   if curl -s --head ${URL} 
            #   then
            #     return 0
            #   else
            #     return 1
            #   fi


# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
        # - configure_infrastructure 
        - create_infrastructure
        # - smoke_test
